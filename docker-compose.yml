services:
  db:
    image: mysql:8.0.23
    container_name: db
    platform: linux/amd64
    environment:
      - MYSQL_HOST=${DB_HOST:-%}
      - MYSQL_DATABASE=${DB_NAME:-express_mysql_template}
      - MYSQL_USER=${DB_USER:-username}
      - MYSQL_PASSWORD=${DB_PASS:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASS:-secret}
      - TZ=${TZ:-Asia/Tokyo}
    ports:
      - '3306:3306'
    volumes:
      - ./db/conf:/etc/mysql/conf.d/:ro
      - mysqldata:/var/lib/mysql
      - ./db/logs:/var/log/mysql
    networks:
      - backend

  api:
    container_name: api
    platform: linux/amd64
    build:
      context: .
      dockerfile: Docker/api/Dockerfile
    environment:
      - MYSQL_HOST={DB_HOST:-%}
      - MYSQL_USER=${DB_USER:-username}
      - MYSQL_PASSWORD=${DB_PASS:-secret}
      - MYSQL_DATABASE=${DB_NAME:-express_mysql_template}
      - CHOKIDAR_USEPOLLING=true # hot-load
    tty: true
    ports:
      - '${NGINX_PORT:-3333}:3000'
    volumes:
      - ./api:/app
    working_dir: /app
    command: npm run dev
    networks:
      - backend
    depends_on:
      - db

  # vue:
  #   image: node:18-bullseye
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true # hot-load
  #   tty: true
  #   ports:
  #     - '8080:8080'
  #   volumes:
  #     - ./vue:/app
  #   working_dir: /app
  #   command: npm run serve
  #   networks:
  #     - backend
  #   depends_on:
  #     - api

networks:
  backend:

volumes:
  mysqldata:
